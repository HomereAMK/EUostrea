legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations:", title.theme = element_text(size = 12, face = "bold"),
label = TRUE,
label.theme = element_text(size = 14),
override.aes = list(size = 5, alpha = .9)), colour = "none")
inversion_h %>%
ggplot(aes(x=population, y=heterozygosity, color=type, linetype=type, alpha=0.3)) +
geom_point(size=3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~lg) +
theme_cowplot()+
coord_flip()+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title.x = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c( "#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C",  "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C","#02630C","#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377" ), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks.x = element_line(colour = "#000000", size = .3),
axis.ticks.y = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.key = element_rect(fill = NA),
legend.background =element_blank())
inversion_h %>%
ggplot(aes(x=population, y=heterozygosity, color=type, linetype=type, alpha=0.3)) +
geom_point(size=3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~lg) +
theme_cowplot()+
coord_flip()+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title.x = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c( "#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C",  "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C","#02630C","#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377" ), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks.x = element_line(colour = "#000000", size = .3),
axis.ticks.y = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.background =element_blank())
inversion_h %>%
ggplot(aes(x=population, y=heterozygosity, color=type, linetype=type, alpha=0.3)) +
geom_point(size=3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~lg) +
theme_cowplot()+
coord_flip()+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title.x = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c( "#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C",  "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C","#02630C","#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377" ), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks.x = element_line(colour = "#000000", size = .3),
axis.ticks.y = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.title =element_text("Heterozygosity at putative Inversion-regions like",colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.background =element_blank())
nversion_h %>%
ggplot(aes(x=population, y=heterozygosity, color=type, linetype=type, alpha=0.3)) +
geom_point(size=3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~lg) +
theme_cowplot()+
coord_flip()+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title.x = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c( "#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C",  "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C","#02630C","#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377" ), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks.x = element_line(colour = "#000000", size = .3),
axis.ticks.y = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.text  =element_text(title="Heterozygosity at putative Inversion-regions like",colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.background =element_blank())
inversion_h %>%
ggplot(aes(x=population, y=heterozygosity, color=type, linetype=type, alpha=0.3)) +
geom_point(size=3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~lg) +
theme_cowplot()+
coord_flip()+
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title.x = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c( "#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C",  "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C","#02630C","#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377" ), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks.x = element_line(colour = "#000000", size = .3),
axis.ticks.y = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.text  =element_text(title="Heterozygosity at putative Inversion-regions like",colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.background =element_blank())
inversion_h %>%
ggplot(aes(x = population, y = heterozygosity, color = type, linetype = type, alpha = 0.3)) +
geom_point(size = 3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~ lg) +
coord_flip() +
labs(title = "Heterozygosity values at putative inversion-regions by population and type",
color = "Type",
x = "Population",
y = "Heterozygosity") +
theme_cowplot() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c("#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C", "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C", "#02630C", "#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377"), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.background = element_blank())
inversion_heterozygosity_plot <- inversion_h %>%
ggplot(aes(x = population, y = heterozygosity, color = type, linetype = type, alpha = 0.3)) +
geom_point(size = 3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~ lg) +
coord_flip() +
labs(title = "Heterozygosity values at putative inversion-regions by population",
color = "Type",
x = "Population",
y = "Heterozygosity") +
theme_cowplot() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c("#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C", "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C", "#02630C", "#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377"), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.background = element_blank())
inversion_heterozygosity_plot <- inversion_h %>%
ggplot(aes(x = population, y = heterozygosity, color = type, linetype = type, alpha = 0.3)) +
geom_point(size = 3) +
scale_color_manual(values = MetBrewer::met.brewer("Archambault", n = 2, type = "discrete")) +
facet_wrap(~ lg) +
coord_flip() +
labs(title = "Heterozygosity values at putative inversion-regions by population",
color = "Type",
x = "Population",
y = "Heterozygosity") +
theme_cowplot() +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.text.x = element_text(colour = "#000000", size = 10),
axis.text.y = element_text(colour = c("#A02353", "#A02353", "#A02353", "#AD5B35", "#ad7358",
"#CC480C", "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C", "#02630C", "#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377"), size = 12, face = "bold", angle = -45, vjust = 1, hjust = 1),
axis.ticks = element_line(colour = "#000000", size = .3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.background = element_blank())
ggsave(inversion_heterozygosity_plot, file = "~/Desktop/Scripts/EUostrea/Figures/InvReg/HetatInvReg_InvReg040508_histo.pdf", device = cairo_pdf, scale = 1.1, width = 12, height = 8, dpi = 300)
dev.off()
### The BEGINNING ~~~~~
##
# ~ Plots BSG_Turbot--PopGenEstimates | designed George Pacheco modified by Homère J. Alves Monteiro
# Cleans the environment ~
rm(list=ls())
# List all the files in the working directory
setwd("~/Desktop/Scripts/Data/PopGenEstimates_Windows_EUostrea/")
# Loads required packages ~
pacman::p_load(tidyverse, lemon, extrafont)
# List all the files in the working directory
filenames <- list.files()
# Create an empty data frame to store merged data
merged_data <- data.frame()
# Load each file into a separate data frame and add a "Pops" column
for (filename in filenames) {
# Extract the population name from the filename
pop_name <- gsub(".tsv", "", unlist(strsplit(filename, "_"))[4])
# Load the file into a data frame
df <- read.table(filename, header = TRUE)
# Add a "Pops" column to the data frame
df$Pops <- factor(paste(pop_name))
# Order CHR
df$CHR <- factor(df$CHR, ordered = TRUE,
levels = c("scaffold1",
"scaffold2",
"scaffold3",
"scaffold4",
"scaffold5",
"scaffold6",
"scaffold7",
"scaffold8",
"scaffold9",
"scaffold10"))
# Append the data frame to the merged data
merged_data <- bind_rows(merged_data, df)
# Assign the data frame to a variable with the appropriate name
assign(pop_name, df)
}
y_strip_labels <- c("scaffold1" = "CHR 01", "scaffold2" = "CHR 02", "scaffold3" = "CHR 03", "scaffold4" = "CHR 04",
"scaffold5" = "CHR 05", "scaffold6" = "CHR 06", "scaffold7" = "CHR 07", "scaffold8" = "CHR 08",
"scaffold9" = "CHR 09", "scaffold10" = "CHR 10")
# Gets column names ~
PopGenEstimates_Windows_ColumnNames <- colnames(BARR)
y_strip_labels <- c("scaffold1" = "CHR 01", "scaffold2" = "CHR 02", "scaffold3" = "CHR 03", "scaffold4" = "CHR 04",
"scaffold5" = "CHR 05", "scaffold6" = "CHR 06", "scaffold7" = "CHR 07", "scaffold8" = "CHR 08",
"scaffold9" = "CHR 09", "scaffold10" = "CHR 10")
# Gets column names ~
PopGenEstimates_Windows_ColumnNames <- colnames(BARR)
# Merges DFs ~
fulldf <- full_join(NISS, OSTR, by = PopGenEstimates_Windows_ColumnNames)
fulldf_InvReg <- filter(fulldf,
(CHR == "scaffold4" | CHR == "scaffold5" | CHR == "scaffold8"))
# Creates Tp plot for USAM NISS OSTR ~
ggplot() +
geom_line(data = fulldf_InvReg, aes(x = gPoint, y = Tp, colour = Pops), linetype = 1, size = 1, alpha=0.4) +
facet_rep_grid(CHR ~. , scales = "free", labeller = labeller(CHR = y_strip_labels)) +
geom_hline(yintercept = 0, linetype = "dotted", size = .2, color = "#FF6545") +
scale_x_continuous("Genomic Position",
breaks = c( 15000000, 30000000, 40000000, 50000000, 60000000, 70000000, 80000000, 90000000, 100000000, 110000000, 115000000),
labels = c( "15Mb", "30Mb", "40Mb", "50Mb", "60Mb", "70Mb", "80Mb","90Mb","100Mb", "110Mb", "115Mb"),
limits = c(0,115000000 ),
expand = c(0.01, 0.01)) +
scale_y_continuous("Nucleotide Diversity Across Chromosomes (20k windows)",
breaks = c(.005, .015, 0.025),
labels = c(".005", ".015", ".025" ),
limits = c(0, .025),
expand = c(0.0025, 0.0025)) +
scale_colour_manual(values = c( "#02630C", "#240377")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title.x = element_text(size = 20, face = "bold", color = "#000000", margin = margin(t = 30, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 20, face = "bold", color = "#000000", margin = margin(t = 0, r = 30, b = 0, l = 0)),
axis.text = element_text(colour = "#000000", size = 15, face = "bold"),
axis.ticks = element_line(color = "#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = .3),
strip.text = element_text(colour = "#000000", size = 11.5, face = "bold"),
legend.position = "top",
legend.margin = margin(t = 0, b = 0, r = 0, l = 0),
legend.box.margin = margin(t = 30, b = 25, r = 0, l = 0),
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(colour = guide_legend(title = "Populations:", title.theme = element_text(size = 21, face = "bold"),
label.theme = element_text(size = 19), override.aes = list(size = 1.4)),
fill = "none")
# Creates Tp plot for USAM NISS OSTR ~
π_NISS_OSTR_InvReg  <- ggplot() +
geom_line(data = fulldf_InvReg, aes(x = gPoint, y = Tp, colour = Pops), linetype = 1, size = 1, alpha=0.4) +
facet_rep_grid(CHR ~. , scales = "free", labeller = labeller(CHR = y_strip_labels)) +
geom_hline(yintercept = 0, linetype = "dotted", size = .2, color = "#FF6545") +
scale_x_continuous("Genomic Position",
breaks = c( 15000000, 30000000, 40000000, 50000000, 60000000, 70000000, 80000000, 90000000, 100000000, 110000000, 115000000),
labels = c( "15Mb", "30Mb", "40Mb", "50Mb", "60Mb", "70Mb", "80Mb","90Mb","100Mb", "110Mb", "115Mb"),
limits = c(0,115000000 ),
expand = c(0.01, 0.01)) +
scale_y_continuous("Nucleotide Diversity Across Chromosomes (20k windows)",
breaks = c(.005, .015, 0.025),
labels = c(".005", ".015", ".025" ),
limits = c(0, .025),
expand = c(0.0025, 0.0025)) +
scale_colour_manual(values = c( "#02630C", "#240377")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title.x = element_text(size = 20, face = "bold", color = "#000000", margin = margin(t = 30, r = 0, b = 0, l = 0)),
axis.title.y = element_text(size = 20, face = "bold", color = "#000000", margin = margin(t = 0, r = 30, b = 0, l = 0)),
axis.text = element_text(colour = "#000000", size = 15, face = "bold"),
axis.ticks = element_line(color = "#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = .3),
strip.text = element_text(colour = "#000000", size = 11.5, face = "bold"),
legend.position = "top",
legend.margin = margin(t = 0, b = 0, r = 0, l = 0),
legend.box.margin = margin(t = 30, b = 25, r = 0, l = 0),
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(colour = guide_legend(title = "Populations:", title.theme = element_text(size = 21, face = "bold"),
label.theme = element_text(size = 19), override.aes = list(size = 1.4)),
fill = "none")
# Saves plot ~
ggsave(π_NISS_OSTR_InvReg, file = "~/Desktop/Scripts/EUostrea/Figures/PopGenEstimates--Windows/π_NISS_OSTR_CHR4_5_8--14mar23.pdf", device = cairo_pdf, scale = 1.1, width = 8, height = 10, dpi = 600)
dev.off()
# Saves plot ~
ggsave(π_NISS_OSTR_InvReg, file = "~/Desktop/Scripts/EUostrea/Figures/PopGenEstimates--Windows/π_NISS_OSTR_CHR4_5_8--14mar23.pdf",
device = cairo_pdf, scale = 1, width = 26, height = 30, dpi = 600)
dev.off()
# Saves plot ~
ggsave(π_NISS_OSTR_InvReg, file = "~/Desktop/Scripts/EUostrea/Figures/PopGenEstimates--Windows/π_NISS_OSTR_CHR4_5_8--14mar23.pdf",
device = cairo_pdf, scale = 1, width = 26, height = 30, dpi = 600)
dev.off()
# Cleans the environment ~
rm(list=ls())
rm(list=ls(all.names=TRUE))
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(scales, extrafont, dplyr, grid, lubridate, cowplot, egg, tidyverse, lemon, stringr, reshape, gghighlight)
# Loads datasets ~
#PopGen <- read.table("BSG_Turbot_Ind66.PopGenEstimates.txt", sep = "\t", header = FALSE)
#PopGen <- read.table("~/Desktop/Scripts/Data/PopGenEstimates/Dataset_I/ThetaSummaries_Feb22--Unfolded_PopGen_ALLpop.PopGenEstimates.txt", sep = "\t", header = FALSE)
PopGen <- read.table("~/Desktop/Scripts/Data/PopGenEstimates/EUostrea/Dec22--Ind581.PopGenEstimates.txt", sep = "\t", header = FALSE)
# Adds column names to datasets ~
colnames(PopGen) <- c("Population", "NSites", "Nucleotide_Diversity", "Watterson_Theta", "Tajima_D")
# Tidies up data frames ~
levels(PopGen$Population)
PopGen$Population <- as.factor(gsub(" ", "", PopGen$Population))
# Converts DF from wide into long ~
PopGenUp <- gather(PopGen, Estimate, Value, "Nucleotide_Diversity", "Watterson_Theta", "Tajima_D")
# Adds data ID column to each DF ~
PopGenUp$ID <- factor(paste("PopGen"))
# Reorders factor levels ~
PopGenUp$Estimate <-
factor(PopGenUp$Estimate, ordered = T, levels = c("Nucleotide_Diversity",
"Watterson_Theta",
"Tajima_D"))
# Corrects the facet labels ~
ylabel <- c("Nucleotide_Diversity" = "Nucelotide Diversity",
"Tajima_D"= "Tajima's D",
"Watterson_Theta" = "Watterson's Theta")
# Reorders populations ~
PopGenUp$Population <- factor(PopGenUp$Population, ordered = T,
levels = c("MOLU", "ZECE", "CRES",
"ORIS","CORS", "PONT",  "RIAE",
"MORL",
"USAM",
"TOLL", "COLN", "BARR",
"TRAL", "CLEW",
"RYAN",
"GREV", "WADD",
"NISS","LOGS","VENO", "HALS", "THIS",
"KALV", "HYPP",
"LANG", "BUNN", "DOLV", "HAUG", "HAFR",
"INNE","VAGS", "AGAB", "OSTR"))
# Custom y-axis breaks ~
breaks_fun <- function(x){
if (max(x) > 0.1){
c(0.20, 0.40, 0.60)}
else{
c(0.0012, 0.0013, 0.0014, 0.0015)}}
# Custom y-axis labels ~
plot_index_labels <- 0
label_fun <- function(x) {
plot_index_labels <<- plot_index_labels + 1L
switch(plot_index_labels,
scales::label_number(accuracy = 0.1, suffix = "X")(x),
scales::label_percent(accuracy = 1, scale = 1, big.mark = "")(x),
scales::label_percent(accuracy = 1, scale = 1, big.mark = "")(x),
scales::label_number(scale = 1/1000000, accuracy = 1, big.mark = "", suffix = "M")(x))}
# Creates plot ~
PopGenEstimates_Plot <-
ggplot() +
geom_point(data = PopGenUp,
aes(x = Population, y = Value, fill = Population), colour = "#000000", shape = 21, size = 3.5, alpha = .9) +
facet_rep_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
scale_fill_manual(values =c(  "#A02353", "#A02353", "#A02353",
"#AD5B35",
"#ad7358",
"#CC480C",  "#CC480C",
"#969696",
"#000000",
"#D38C89", "#D38C89", "#D38C89",
"#C89AD1", "#C89AD1",
"#7210A0",
"#91BD96", "#91BD96",
"#02630C","#02630C","#02630C", "#02630C", "#02630C",
"#45D1F7", "#45D1F7",
"#588cad", "#588cad", "#588cad", "#588cad", "#588cad",
"#240377", "#240377", "#240377", "#240377" ))+
#scale_colour_manual(values = c("#4daf4a", "#377eb8", "#e41a1c")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(colour = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour = "#000000", size = 16, face = "bold", angle = 45, vjust = 1, hjust = 1),
axis.text.y = element_text(colour = "#000000", size = 16),
axis.ticks.x = element_line(colour = "#000000", size = .3),
axis.ticks.y = element_line(colour = "#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold"),
legend.position = "top",
legend.margin = margin(t = 0, b = 0, r = 0, l = 0),
legend.box.margin = margin(t = 10, b = 20, r = 0, l = 0),
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations:", title.theme = element_text(size = 12, face = "bold"),
subtitle ="Genome-wide",
label.theme = element_text(size = 14),
override.aes = list(size = 5, alpha = .9)), colour = "none")
PopGenEstimates_Plot
# Saves plot ~
ggsave(PopGenEstimates_Plot, file = "~/Desktop/Scripts/EUostrea/Figures/PopGenEstimates/pi_theta_Taj_PopGenEstimates_14mar23.pdf",
device = cairo_pdf, width = 12, height = 8, scale = 1.35, dpi = 600)
